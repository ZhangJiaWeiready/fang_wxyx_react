import {combineReducers} from 'redux'import {  RECEIVECATELIST,  RECEIVEFLASHSALEINDEXVO,  RECEIVEFOCUSLIST,  RECEIVEHEADCATELIST,  RECEIVENEWITEMLIST,  RECEIVEPOLICYDESCLIST,  RECEIVEPOPULARITEMLIST,  RECEIVESALEINDEXVO,  RECEIVETAGLIST,  RECEIVETOPICLIST,  RECEIVEBANNER,  RECEIVECOLUMN,  RECEIVEFINDMORE,  RECEIVERECOMMENDONE,  RECEIVERECOMMENDTHREE,  RECEIVERECOMMENDTWO,  RECEIVETENFIFTEEN,  RECEIVEYXLOOK,  RECEIVEZHENONE,  RECEIVEZHENTWO,  RECEIVEZHENTHREE,  RECAIVECATE,  ISLOGIN,  ALERTMSG,  CANCELLOGIN} from './action-type'const initData = {  cateList: [], // 商品列表  flashSaleIndexVO: {}, // 获取限时购信息  focusList: [], // 轮播图信息  headCateList: [], // 头部商品列表  newItemList: [], // 新品列表  policyDescList: [], // 网易政策列表  popularItemList: [], // 受欢迎的列表  saleIndexVO: {}, // 福利社  tagList: [], // 品牌制造商列表  topicList: [], // 专题精选  banner: [], //导航  column: [], // nav下的list  recommendOne: {}, // 为你推荐  recommendTwo: {},  recommendThree: {},  tenfifteen: [], // 十点一刻  zhenOne: {}, //严选珍品  zhenTwo: {},  zhenThree: {},  yxLook: {}, // 严选look  findMore: [], // 找更多  categoryL1List: [], // 个性专区  categoryL2List: [],  currentCategory: {},  cates: [],}// reducer 的作用，获取最新的信息通过dispathc传入的action 的数据进行更新，产生user状态的reducer// 因为多个数据所以定义一个变量的初始化状态4//分发action之后 处理function cateList(state=initData,action) {  switch (action.type){    case RECEIVECATELIST: // 成功时data    // case RECEIVEFLASHSALEINDEXVO:      return action.data    /*case RECEIVEFOCUSLIST:      return {...state,focusList:action.data }    case RECEIVEHEADCATELIST:      return {...state,headCateList:action.data }    case RECEIVENEWITEMLIST:      return {...state,newItemList:action.data }    case RECEIVEPOLICYDESCLIST:      return {...state,policyDescList:action.data }    case RECEIVEPOPULARITEMLIST:      return {...state,popularItemList:action.data }    case RECEIVESALEINDEXVO:      return {...state,saleIndexVO:action.data }    case RECEIVETAGLIST:      return {...state,tagList:action.data }    case RECEIVETOPICLIST:      return {...state,topicList:action.data }    case RECEIVEBANNER:      return {...state,banner:action.data }    case RECEIVECOLUMN:      return {...state,column:action.data }    case RECEIVERECOMMENDONE:      return {...state,recommendOne:action.data }    case RECEIVERECOMMENDTHREE:      return {...state,recommendTwo:action.data }    case RECEIVERECOMMENDTWO:      return {...state,recommendThree:action.data }    case RECEIVETENFIFTEEN:      return {...state,tenfifteen:action.data }    case RECEIVEZHENONE:      return {...state,zhenOne:action.data }    case RECEIVEZHENTWO:      return {...state,zhenTwo:action.data }    case RECEIVEZHENTHREE:      return {...state,zhenThree:action.data }    case RECEIVEYXLOOK:      return {...state,yxLook:action.data }    case RECEIVEFINDMORE:      return {...state,findMore:action.data }    case RECAIVECATE:      return {...state,cates:action.data }*/    default:      return state  }}const user = {  isLogin: false}function userIslogin(state = user,action) {  switch (action.type){    case ISLOGIN:      return {...state,isLogin:action.data}    default:      return state  }}const alertMsg = {  alertText: '',  isShowALert: false}function alerttiptext (state = alertMsg,action) {  switch (action.type){    case ALERTMSG:      return ({...state,alertText:action.data})    case CANCELLOGIN:      return ({...state,isShowALert:action.data})    default:      return state  }}export default combineReducers({  cateList,userIslogin,alerttiptext})