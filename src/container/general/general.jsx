/*识物 */import React,{Component} from 'react'import Swiper from 'swiper'import BScroll from 'better-scroll'import {  reqBanner,  reqColumn,  reqRecommendOne,  reqRecommendTwo,  reqRecommendThree,  reqTenfifteen,  reqZhenOne,  reqZhenTwo,  reqZhenThree,  reqYxLook,  reqFindMore} from "../../api";import LoginHeader from '../../components/loginHeader/loginHeader'import GeneralReview from '../../components/generalReview/generalReview'import ToTop from '../../components/toTop/toTop'import './general.styl'export default class General extends Component{    state = {      banner: [], //导航      column: [], // nav下的list      recommendOne: {}, // 为你推荐      recommendTwo: {},      recommendThree: {},      tenfifteen: [], // 十点一刻      zhenOne: {}, //严选珍品      zhenTwo: {},      zhenThree: {},      yxLook: {}, // 严选look      findMore: [], // 找更多      categoryL1List: [], // 个性专区      categoryL2List: [],      currentCategory: {},    }  componentDidMount() {    this.getBanner()    this.getColumn()    this.getFindMore()    this.getRecommendOne()    this.getRecommendTwo()    this.getRecommendThree()    this.getYxLook()    this.getTenfifteen()    this.getZhenOne()    this.getZhenTwo()    this.getZhenThree()    // 控制底部小圆点的显示隐藏    window.addEventListener('scroll', this.handleScroll)    /*文章滑动*/    new BScroll('.articleWrap',{      scrollX: true,      scrollY: false,      click: true,      bounceTime: 1000,      momentumLimitDistance: 8,      eventPassthrough: 'vertical'    })    new BScroll('.list',{      click: true,      scrollX: true,      eventPassthrough: 'vertical',      momentumLimitDistance: 8    })  }  componentWillUnmount() {    if (this.swiper) { // 销毁swiper      this.swiper.destroy()    }  }  componentDidUpdate() {    if(this.swiper){      this.swiper.slideTo(0, 0)      this.swiper.destroy()      this.swiper = null;    }    this.swiper = new Swiper('.swiper-container', {      loop: true,      spaceBetween: 20,      slidesPerView : 1.2,      centeredSlides : true    })  }  async getBanner (){        const result = await reqBanner();        if (result.code === 0) {            const banner = result.data          this.setState({            banner          })        }    }  async getColumn (){        const result = await reqColumn();        if (result.code === 0) {            const column = result.data          this.setState({            column          })        }    }  async getRecommendOne (){        const result = await reqRecommendOne();        if (result.code === 0) {            const recommendOne = result.data          this.setState({            recommendOne          })        }    }  async getRecommendTwo (){        const result = await reqRecommendTwo();        if (result.code === 0) {            const recommendTwo = result.data          this.setState({            recommendTwo          })        }    }  async getRecommendThree (){        const result = await reqRecommendThree();        if (result.code === 0) {            const recommendThree = result.data          this.setState({            recommendThree          })        }    }  async getTenfifteen (){        const result = await reqTenfifteen();        if (result.code === 0) {            const tenfifteen = result.data          this.setState({            tenfifteen          })        }    }  async getZhenOne (){        const result = await reqZhenOne();        if (result.code === 0) {            const zhenOne = result.data          this.setState({            zhenOne          })        }    }  async getZhenTwo (){        const result = await reqZhenTwo();        if (result.code === 0) {            const zhenTwo = result.data          this.setState({            zhenTwo          })        }    }  async getZhenThree (){        const result = await reqZhenThree();        if (result.code === 0) {            const zhenThree = result.data          this.setState({            zhenThree          })        }    }  async getYxLook (){        const result = await reqYxLook();        if (result.code === 0) {            const yxLook = result.data          this.setState({            yxLook          })        }    }  async getFindMore (){        const result = await reqFindMore();        if (result.code === 0) {            const findMore = result.data          this.setState({            findMore          })        }    }  handleScroll = () => {    this.scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop    if (this.scrollTop >= document.documentElement.clientHeight){      this.setState({        isShowPoint: true      })    } else{      this.setState({        isShowPoint: false      })    }  }    render() {        const {zhenOne,zhenThree,zhenTwo,banner,column,tenfifteen,yxLook,findMore,recommendOne,recommendTwo,recommendThree} = this.state      let isFirst = true        return (          <div className='generalWrap'>            <LoginHeader/>            <section className='swiper'>              <div className="swiper-container">                <div className="swiper-wrapper">                  {                      banner.map((item,index) => {                          return (                            <div className="swiper-slide" key={index}>                              <img src={item.picUrl} alt="" />                              <div className='middleText'>                                <div className='subtitle'>                                  --{item.subTitle}                                </div>                                <div className='title'>                                  {item.title}                                </div>                                <div className='desc'>                                  {item.desc}                                </div>                              </div>                            </div>                          )                      })                  }              </div>              <div className="swiper-pagination"></div>          </div>    </section>            <section className="article">                <div className="articleWrap">                  <ul>                    {                      column.map((only,index) => {                          return (                            <li key={index}>                              <div className="picWrap">                                <span>                                 {only.articleCount}                                </span>                              <img src={only.picUrl} alt="" />                              </div>                              <div className="avatorName">                                <span>                                  {only.title}                                </span>                              </div>                            </li>                          )                      })                    }                </ul>              </div>            </section>      <GeneralReview recommendOne={recommendOne} recommendTwo={recommendTwo} recommendThree={recommendThree}/>      <section className="tenfifteen">        <div className="title">          <span>十点一刻</span>        </div>        <div className="list">          <ul>            {                tenfifteen.map((ten,index) => {                    isFirst = false                    if (isFirst){                        return                    }                  return (                    <li key={index}>                      <div className="wrap">                        <div className="top">                          <span>--今日话题--</span>                        </div>                        <div className="middle">                          <div className='Middletitle'>{ten.title}</div>                          <div className='question'>{ten.desc}</div>                        </div>                        <div className="bottoms">                          <div className="wrap">                            {ten.participantAvatar!==null ? (                              ten.participantAvatar.map((avator,index) => {                                if (avator) {                                  return (                                    <div className="avator" key={index}>                                      <img src={avator} alt="" />                                    </div>                                  )                                }                              })                            ) : null}                            {                              !ten.participantAvatar===0? (<div className="avator more">                                <div className='point'></div>                                <div className='point'></div>                                <div className='point'></div>                              </div>) : null                            }                            <div className='manyPeople'>                      <span>                        {ten.participantNum}人参与话题                      </span>                            </div>                          </div>                        </div>                      </div>                    </li>                  )              })            }              <li className='seeAll'>                <div className='text'>                  <span>查看全部话题 </span>                  <img src="./images/arrow.png" alt="" />                </div>              </li>            </ul>        </div>    </section>      <GeneralReview zhenOne={zhenOne} zhenTwo={zhenTwo} zhenThree={zhenThree}/>      <section className='yxLook'>        <div className="header">          <span>严选LOOK</span>        </div>        <img src={yxLook.picUrl} alt="" />        <div className="topicInfo">          <div className="avatorInfo">            <img src={yxLook.avatar} alt="" />            <span className='name'>{yxLook.nickname}</span>          </div>          <div className="evaluate">            <p>{yxLook.content}</p>          </div>        </div>      </section>      <section className="moreGoods">        <section className="middleLine">          <span>更多精彩</span>        </section>        <section className='moreContent'>          {            findMore.map((more,index) => {                return (                  <div className="item" key={index}>                    {!more.picList ? <img src={more.scenePicUrl} alt="more" /> : null}                    {more.picList ? (                      <div className="imgs">                        <div className="left">                          {                            more.picList.map((pic,index) => {                                  if(index ===0) {                                    return (<img src={pic} alt="" key={index}/>)                                  }                            })                          }                        </div>                        <div className="right">                          {                            more.picList.map((pic,index) => {                                if (index===1 || index===2){                                  return (                                    <img src={pic} alt="" key={index}/>                                  )                                }                            })                          }                        </div>                      </div>                    ):null}                    <div className='text'>                      <span>{more.subTitle}</span>                    </div>                  </div>                )            })          }      </section>    </section>    <ToTop isShowPoint={this.state.isShowPoint}/>    </div>        )    }}