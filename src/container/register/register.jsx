/*注册 */import React,{Component} from 'react'import LoginHeader from '../../components/loginHeader/loginHeader'import {connect} from 'react-redux'import './register.styl'import {login,alerTexts,cancelAlertShow} from "../../redux/actions";import AlertTip from '../../components/alretTip/alretTip'import {Toast} from "antd-mobile/lib/index";class Register extends Component{    state ={    phoneNumber: '',      password:'',      msgCode: ''    }  toPersonal=()=>{    const {phoneNumber,password,msgCode} = this.state    const phoneEXT = /^[1][3,4,5,7,8][0-9]{9}$/    if (phoneNumber===''){      this.changeShow('手机号码不为空')      // 直接return不执行下面的      return    }else if (password ===''){      this.changeShow('密码不为空')      // 直接return不执行下面的      return    }    else if (msgCode ===''){      this.changeShow('验证码不为空')      // 直接return不执行下面的      return    }    else if (!phoneEXT.test(phoneNumber) ){      this.changeShow('手机号码格式不正确')      // 直接return不执行下面的      return    }else if (!(/^.*(?=.{6,})(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/).test(password)){      this.changeShow('密码格式不正确，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符')      // 直接return不执行下面的      return    }else if (!/^\d{6}$/.test(msgCode)){      console.log(msgCode)      this.changeShow('请输入六位数验证码')      // 直接return不执行下面的      return    }else{      Toast.info('登录成功', 1);      this.props.history.replace('/personal')    }    this.props.login(true)    this.props.history.replace('/personal')  }  changeShow= (Texts)=>{    this.props.alerTexts(Texts)    this.props.cancelAlertShow(true)  }  handleChange =(name,event) => {    this.setState({      [name]:event.target.value    })}    render() {        const {phoneNumber,password,msgCode} = this.state      const {isShowALert} = this.props.alerttiptext        return (          <div className='registerWrap'>            <LoginHeader/>            <div className='title'>              <span>手机号注册</span>            </div>            <div className="content">              <form action="#">                <div className='inputBox' >                  <input type="tel" maxLength="11" placeholder='请输入手机号' onChange={(ev)=> this.handleChange('phoneNumber',ev)} />                    {                      phoneNumber!==''? (<i className='closeIcon'> </i>):null                  }                </div>                <div className="scrollCode">                  <div className='picSlider'>                    <img src={require('./images/bigPin.jpg')} alt="" className='big' />                      <img src={require('./images/small.jpg')} alt="" className='small' />                  </div>                  <div className="slider">                    <img src={require('./images/slider.png')} alt="" />                      <span>按住滑块，拖动完成上方拼图</span>                  </div>                </div>                <div className="codeLogin">                  <input type="text" maxLength="6" placeholder='请输入短信验证码' className='inputcode' onChange={(ev)=> this.handleChange('msgCode',ev)} />                    <div className="getCode">                      <span>获取验证码</span>                    </div>                </div>                <div className='inputBox' >                  <input type="password" placeholder='请输入密码' onChange={(ev)=> this.handleChange('password',ev)} />                    {                      password!==''? (<i className='closeIcon'> </i>):null                    }                </div>                <div className="registerbtn" onClick={this.toPersonal}>                    <span>注册</span>                </div>          </form>      <div className="agree">        <p>          我同意          <a href='https://reg.163.com/agreement_mobile_wap.shtml?v=20171127'>            《服务条款》          </a>          和          <a href="https://reg.163.com/agreement_mobile_ysbh_wap.shtml?v=20171127">            《同意隐私政策》          </a>        </p>      </div>      <router-link to='/emailregister' className='register'>        <span>邮箱账号注册</span>        <i className='arrow'></i>      </router-link>    </div>            {isShowALert? (<AlertTip/>):null}    </div>        )    }}export default connect(      state=> ({userIslogin:state.userIslogin,  alerttiptext:state.alerttiptext,}),  {login,alerTexts,cancelAlertShow}    )(Register)